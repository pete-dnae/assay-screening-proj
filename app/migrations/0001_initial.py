# Generated by Django 2.0 on 2018-05-21 16:10

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExperimentModel',
            fields=[
                ('experiment_name', models.CharField(max_length=80, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='LabChipResultsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('labchip_well', models.CharField(max_length=100)),
                ('peak_name', models.CharField(max_length=100)),
                ('size', models.FloatField(null=True)),
                ('concentration', models.FloatField(null=True)),
                ('molarity', models.FloatField(null=True)),
                ('labchip_plate_id', models.CharField(max_length=100)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ExperimentModel')),
            ],
        ),
        migrations.CreateModel(
            name='QpcrResultsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_threshold', models.FloatField(null=True)),
                ('temperatures', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('amplification_cycle', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('amplification_delta_rn', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('melt_temperature', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('melt_derivative', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(null=True), size=None)),
                ('qpcr_plate_id', models.CharField(max_length=200)),
                ('qpcr_well', models.CharField(max_length=100)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ExperimentModel')),
            ],
        ),
        migrations.CreateModel(
            name='ReagentCategoryModel',
            fields=[
                ('name', models.CharField(max_length=40, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReagentGroupDetailsModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concentration', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ReagentGroupModel',
            fields=[
                ('group_name', models.CharField(max_length=40, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReagentGroupWellLookupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well', models.CharField(max_length=100)),
                ('transfer', models.BooleanField()),
                ('reagent_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ReagentGroupModel')),
            ],
        ),
        migrations.CreateModel(
            name='ReagentModel',
            fields=[
                ('name', models.CharField(max_length=80, primary_key=True, serialize=False, unique=True)),
                ('opaque_json_payload', models.TextField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ReagentCategoryModel')),
            ],
        ),
        migrations.CreateModel(
            name='ReagentWellLookupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('well', models.CharField(max_length=100)),
                ('transfer', models.BooleanField()),
                ('reagent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ReagentModel')),
            ],
        ),
        migrations.CreateModel(
            name='RulesScriptModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UnitsModel',
            fields=[
                ('abbrev', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='reagentgroupdetailsmodel',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ReagentModel'),
        ),
        migrations.AddField(
            model_name='reagentgroupdetailsmodel',
            name='reagent_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.ReagentGroupModel'),
        ),
        migrations.AddField(
            model_name='reagentgroupdetailsmodel',
            name='units',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.UnitsModel'),
        ),
        migrations.AddField(
            model_name='labchipresultsmodel',
            name='qpcr_well',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.QpcrResultsModel'),
        ),
        migrations.AddField(
            model_name='experimentmodel',
            name='rules_script',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiment_rule_script', to='app.RulesScriptModel'),
        ),
    ]
