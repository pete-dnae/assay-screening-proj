# Generated by Django 2.0.2 on 2018-02-16 16:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllocationInstructions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suppressed_columns', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AllocRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_for_ordering', models.PositiveIntegerField(default=1)),
                ('payload_type', models.CharField(choices=[('Dilution Factor', 'Dilution Factor'), ('HgDNA', 'HgDNA'), ('PA Primers', 'PA Primers'), ('ID Primers', 'ID Primers'), ('Strain', 'Strain'), ('Reagent', 'Reagent')], max_length=15)),
                ('start_row_letter', models.CharField(max_length=1, validators=[django.core.validators.RegexValidator(re.compile('[A-Z]'), 'Enter a capital letter.')])),
                ('end_row_letter', models.CharField(max_length=1, validators=[django.core.validators.RegexValidator(re.compile('[A-Z]'), 'Enter a capital letter.')])),
                ('start_column', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(20)])),
                ('end_column', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(20)])),
            ],
            options={
                'ordering': ('rank_for_ordering',),
            },
        ),
        migrations.CreateModel(
            name='Arg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Concentration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('normalised_string_value', models.CharField(max_length=15)),
                ('preferred_units', models.CharField(choices=[('X', 'X'), ('mM', 'mM'), ('mg/ml', 'mg/ml'), ('mM each', 'mM each'), ('microM', 'microM'), ('ng/ul', 'ng/ul'), ('cp/ul', 'cp/ul'), ('%', '%')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='CyclingPattern',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_time', models.PositiveIntegerField()),
                ('activation_temp', models.PositiveIntegerField()),
                ('num_cycles', models.PositiveIntegerField()),
                ('denature_temp', models.PositiveIntegerField()),
                ('denature_time', models.PositiveIntegerField()),
                ('anneal_temp', models.PositiveIntegerField()),
                ('anneal_time', models.PositiveIntegerField()),
                ('extend_temp', models.PositiveIntegerField()),
                ('extend_time', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment_name', models.CharField(max_length=80)),
                ('designer_name', models.CharField(max_length=80)),
                ('id_cycling', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiment_id_cycling', to='app.CyclingPattern')),
                ('pa_cycling', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='experiment_pa_cycling', to='app.CyclingPattern')),
            ],
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=30)),
                ('volume_in_ml', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbreviation', models.CharField(max_length=8, unique=True)),
                ('full_name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('allocation_instructions', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plate', to='app.AllocationInstructions')),
            ],
        ),
        migrations.CreateModel(
            name='Primer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oligo_code', models.CharField(max_length=30)),
                ('full_name', models.CharField(max_length=50, unique=True)),
                ('role', models.CharField(choices=[('fwd', 'fwd'), ('rev', 'rev')], max_length=15)),
                ('gene', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer', to='app.Gene')),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer', to='app.Organism')),
            ],
        ),
        migrations.CreateModel(
            name='PrimerKit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fwd_concentration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer_kit_fwd', to='app.Concentration')),
            ],
        ),
        migrations.CreateModel(
            name='PrimerPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suitable_for_pa', models.BooleanField()),
                ('suitable_for_id', models.BooleanField()),
                ('forward_primer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer_pair_fwd', to='app.Primer')),
                ('reverse_primer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer_pair_rev', to='app.Primer')),
            ],
            options={
                'ordering': ('forward_primer__organism__abbreviation', 'forward_primer__gene__name', 'forward_primer__full_name', 'reverse_primer__full_name'),
            },
        ),
        migrations.CreateModel(
            name='Reagent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('lot', models.CharField(max_length=30)),
                ('hash', models.CharField(db_column='hash_name', max_length=500, unique=True)),
                ('concentration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reagent', to='app.Concentration')),
            ],
        ),
        migrations.CreateModel(
            name='RuleList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.ManyToManyField(to='app.AllocRule')),
            ],
        ),
        migrations.CreateModel(
            name='Strain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('genome_size', models.BigIntegerField()),
                ('arg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='strain_arg', to='app.Arg')),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='strain_organism', to='app.Organism')),
            ],
            options={
                'ordering': ('organism__abbreviation', 'arg__name'),
            },
        ),
        migrations.CreateModel(
            name='StrainKit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strains', models.ManyToManyField(to='app.Strain')),
            ],
        ),
        migrations.AddField(
            model_name='primerkit',
            name='id_primers',
            field=models.ManyToManyField(related_name='primer_pair_id', to='app.PrimerPair'),
        ),
        migrations.AddField(
            model_name='primerkit',
            name='pa_primers',
            field=models.ManyToManyField(related_name='primer_pair_pa', to='app.PrimerPair'),
        ),
        migrations.AddField(
            model_name='primerkit',
            name='rev_concentration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primer_kit_rev', to='app.Concentration'),
        ),
        migrations.AddField(
            model_name='experiment',
            name='plates',
            field=models.ManyToManyField(to='app.Plate'),
        ),
        migrations.AddField(
            model_name='composition',
            name='reagents',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='composition', to='app.Reagent'),
        ),
        migrations.AddField(
            model_name='allocrule',
            name='payload',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='allocrule', to='app.Reagent'),
        ),
        migrations.AddField(
            model_name='allocationinstructions',
            name='rule_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instructions', to='app.RuleList'),
        ),
    ]
