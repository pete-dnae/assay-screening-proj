Requirements for Hierarchical Mixes
-----------------------------------

The user wants to start only with this info per chamber:
    o  reagent name
    o  concentration

The user needs to get out
    o  instructions for making and dispensing premixes (hierarchically)
    o  instructions for dispensing some reagents directly from stock to
       chambers

Example of mixing instructions

    o  Make up a mix(1) using:
        o  some vol of A from a known conc stock 
        o  some vol of B from a known conc stock 

    o  Make up a mix(2) using:
        o  some vol of mix(1)
        o  some vol of C from a known conc stock 

    o  Make up a mix(3) using:
        o  some vol of mix(2)
        o  some vol of D from a known conc stock 

Example of chamber filling instructions

    o  Dispense some vol of some mix into some set of chambers
    o  Repeat for other mixes and chamber sets
    o  Dispense some vol of some stock reagent into some set of chambers
    o  Repeat for other stock reagents and chamber sets

Minimum Data Structure Requirements to Enable Instruction Generation
--------------------------------------------------------------------

We hypothesise a minimal model where the items in our chambers and in mixtures 
are a combination of a reagent name, and its final concentration required in
the chamber it ends up in. We might call this combination of reagent name and
final concentration as an *item*. It is a type-like thing. If a reagent name is
used in the final chambers at two different concentrations, we treat this as
two separate items. And the the model proposed regards these as unrelated, and
never knows they are the same thing at different concentrations.

It follows that the mixture hierarchy model will hold the trace-back of the
reagents

Hypothesise that we need only a flat collection of container objects, that 
capture the sources and destinations for each. This represents the graph like
structure implicitly, and can model both a chamber and a premix container.
