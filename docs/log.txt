*  Work Plan - Back End from 8th March 2018

o  Update parser to deal with new rules script spec
    *  Code roughly right
    o  Finish with TDD
        *  Have we a test already? - yes but too coupled with other stuff
        o  Write isolated parser test from scratch
            o  test tiny example
                *  design scope
                *  include all row/col variants for both col and row
                o  delegate assessment of compatib to transfer rule
                    *  Create RowColIntersectinos and give it shape deduction
                       responsibility.
                    *  tdd up compatibility logic in TransferRule
                o  regression up script parser
                    o  need to convert letters to indices at some point
                        *  first add error check
                        *  now change contract to return indices
                        o  begin adding assertions for rules produced
                            o  transfer rule row/col wrong
                o  resume tiny example test of rules parser
            o  come back to ! mandate?
o  Update rules interpreter to match
o  Pare down the database and models to only the essentials needed and 
   anticipated
    o  I think this means
        o  Experiment
        o  Known reagents
o  Replace make reference experiment with new one using script
o  Replace make simple experiment similarly
o  Cut down views, serializer, end points to minimum required
    o  List all experiments whose name includes XXX
    o  Get an experiment - including rules script field
    o  Get the allowed names for reagents grouped into their types
    o  Get the allowed units strings
    o  Post a new reagent name with its type
    o  Put a new rules script to an experiment
    o  Get the allocation results for an experiment - for a specified reagent
       type
o  Get rid of redundant unit tests, fix up those that remain, and add any
   required.
o  Get rid of all out of data documentation
o  Plan and prepare for deployment
o  Deploy
