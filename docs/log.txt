*  Work Plan - Back End from 8th March 2018
*  Update parser to deal with new rules script spec
*  Make the parser emit machine readable error messages
*  Update rules interpreter to match
*  Pare down the database and models to only the minimum needed and 
   anticipated
    *  Work out carefully what is needed and new wanted and list
    *  Ditch those to drop as rough pass
    *  Fix up experiment and rulesscript classes
*  Upgrade utility scripts like db reset
    *  app/management/commands
    *  empty_app_tables
    *  pop_with_ref
    *  pop with simple (ditch)
    *  reset db
    *  reset db simple
*  Replace make reference experiment with new one using script
    *  Code make ref exp as wanted
    *  Now ditch no longer modules in this directory
*  Should be able to build database now and test reference experiment
o  Cut down views, serializer, end points to minimum required and make them
    *  Check this list below from use cases
    *  Get rid of no longer needed views, serializers and end points
    o  Start working through those that remain and new ones needed
        *  Do all basic CRUD ops work for experiment and rulesScript? = yes
        o  Get parse results for a script
            o  Upgrade error reporting to include index into whole text
                *  Design how add to current implementation
                *  Code it
                *  Fix up the unit test for parser
                    *  Get it to run without error
                    *  Add test for linenumber, column and script posn in error
                    *  Add scrutiny of each exception
                    *  Add test that version comes first and is present
                o  Fix up the unit test for interpreter if changes
        o  Get allocation results for a script separate?
o  Get rid of redundant unit tests, fix up those that remain, and add any
   required.
o  Bring in allowed reagent names and grouping and units
o  New end point for selective results per type needed?
o  Line number of script that requested each cell's allocation needed?
o  Bring in pools in every respect
o  Provide endpoint that Chris' script needs
o  Get rid of all out of data documentation
o  Plan and prepare for deployment
o  Deploy

---------------------------------------------------------------------------
Keep char index
---------------------------------------------------------------------------
What to serialize back to user:

Human readable message like this:

    <Some detailed problem> at character 12 line 99.

Machine readable index into script

    index: 342
