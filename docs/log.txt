*  Work Plan - Back End from 8th March 2018
*  Update parser to deal with new rules script spec
*  Make the parser emit machine readable error messages
o  Update rules interpreter to match
    *  Have a gander to see what is needed - only have skeleton
    *  What does test look like? (isn't one)
    *  Get test rules interpreter going with runs to completion test
    *  Implement and test interpreter for AllocRules
        *  Need conc and units to be included
        *  Make test for Plate1[1]2] for two reagents
    o  Get rules interpreter to do something real with transfer rules
        o  What must a transfer in AllocationResults say?
        o  Where should mapping of source/dest shapes go?
o  Pare down the database and models to only the essentials needed and 
   anticipated
    o  I think this means
        o  Experiment
        o  Known reagents
        o  Mapping of reagents to categores
        o  Binding of reagent_conc to pool names
o  Replace make reference experiment with new one using script
o  Replace make simple experiment similarly
o  Cut down views, serializer, end points to minimum required and make them
    o  List all experiments whose name includes XXX
    o  Get an experiment - including rules script field
    o  Get the allowed names for reagents grouped into their types
    o  Get the allowed units strings
    o  Accept a modified rules script and feedback parsed info and alloc
    o  Post a new reagent name with its type
    o  Get the allocation results for an experiment - for a specified reagent
       type
    o  Data query needed for Chris' script
o  Get rid of redundant unit tests, fix up those that remain, and add any
   required.
o  Get rid of all out of data documentation
o  Plan and prepare for deployment
o  Deploy

---------------------------------------------------------------------------
# What parse data needed by front end?
---------------------------------------------------------------------------
Boolean good or not
Human readable message FE can show directly
Line number of error
