*  Work Plan - Back End from 8th March 2018
*  Update parser to deal with new rules script spec
*  Make the parser emit machine readable error messages
*  Update rules interpreter to match
*  Pare down the database and models to only the minimum needed and 
   anticipated
    *  Work out carefully what is needed and new wanted and list
    *  Ditch those to drop as rough pass
    *  Fix up experiment and rulesscript classes
*  Upgrade utility scripts like db reset
    *  app/management/commands
    *  empty_app_tables
    *  pop_with_ref
    *  pop with simple (ditch)
    *  reset db
    *  reset db simple
*  Replace make reference experiment with new one using script
    *  Code make ref exp as wanted
    *  Now ditch no longer modules in this directory
*  Should be able to build database now and test reference experiment
o  New endpoint to get() parser response to script plain text
    *  Design end point name and contract
    o  Change mind - do as read only fields on rules script itself
        *  Ditch dedicated end point
        *  Try adding a SerializerMethodField read_only
        o  Build the parse/interpret pipeline and return ParseError
        o  Now add allocation results
            *  Make and test parse and interpret class in rules engine


o  Get rid of redundant unit tests, fix up those that remain, and add any
   required.
o  Bring in allowed reagent names and grouping and units
o  New end point for selective results per type needed?
o  Line number of script that requested each cell's allocation needed?
o  Bring in pools in every respect
o  Provide endpoint that Chris' script needs
o  Get rid of all out of data documentation
o  Plan and prepare for deployment
o  Deploy

---------------------------------------------------------------------------
Parse results
---------------------------------------------------------------------------

get rules-parse(script)

input
    script as text
output
    {
        'error': {
        }
        'wells': {
        }
    }
    

